<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.veasion.auto.mapper.UserMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into user
        (
            username, password, role, is_available, 
            is_deleted, create_time, update_time
        )
        values
        (
            #{username}, #{password}, #{role}, #{isAvailable}, 
            #{isDeleted}, #{createTime}, #{updateTime}
        )
    </insert>

    <insert id="insertAll">
        insert into user
        (
            username, password, role, is_available, 
            is_deleted, create_time, update_time
        )
        values
        <foreach collection="list" item="obj" separator=",">
        (
            #{obj.username}, #{obj.password}, #{obj.role}, #{obj.isAvailable}, 
            #{obj.isDeleted}, #{obj.createTime}, #{obj.updateTime}
        )
        </foreach>
    </insert>

    <update id="update">
        update user
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="role != null">
                role = #{role},
            </if>
            <if test="isAvailable != null">
                is_available = #{isAvailable},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateAll">
        update user
        <set>
            username = #{username},
            password = #{password},
            role = #{role},
            is_available = #{isAvailable},
            is_deleted = #{isDeleted},
            create_time = #{createTime},
            update_time = #{updateTime},
        </set>
        where id = #{id}
    </update>

    <update id="deleteById">
        update user set is_deleted = 1 where id = #{value}
    </update>

    <select id="queryById" resultType="cn.veasion.auto.model.UserPO">
        select * from user where id = #{value}
    </select>

    <select id="queryByUsername" resultType="cn.veasion.auto.model.UserPO">
        select * from user t where username = #{username} and is_deleted = 0
        <choose>
            <when test="notEqId != null">
                and id &lt;&gt; #{notEqId}
            </when>
            <otherwise>
                and is_available = 1
            </otherwise>
        </choose>
    </select>

    <select id="queryList" resultType="cn.veasion.auto.model.UserPO">
        select * from user t where is_deleted = 0
        <include refid="whereSQL" />
        order by id desc
    </select>

    <sql id="whereSQL">
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test="username != null and username.trim() != ''">
            and t.username like concat('%', #{username}, '%')
        </if>
        <if test="isAvailable != null">
            and t.is_available = #{isAvailable}
        </if>
        <if test="createTime != null">
            and t.create_time >= #{createTime}
        </if>
    </sql>

</mapper>
