<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.veasion.auto.mapper.ApiTestCaseMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into api_test_case
        (
            project_id, case_name, case_desc, module, 
            author, script, is_available, is_deleted, 
            create_time, update_time
        )
        values
        (
            #{projectId}, #{caseName}, #{caseDesc}, #{module}, 
            #{author}, #{script}, #{isAvailable}, #{isDeleted}, 
            #{createTime}, #{updateTime}
        )
    </insert>

    <insert id="insertAll">
        insert into api_test_case
        (
            project_id, case_name, case_desc, module, 
            author, script, is_available, is_deleted, 
            create_time, update_time
        )
        values
        <foreach collection="list" item="obj" separator=",">
        (
            #{obj.projectId}, #{obj.caseName}, #{obj.caseDesc}, #{obj.module}, 
            #{obj.author}, #{obj.script}, #{obj.isAvailable}, #{obj.isDeleted}, 
            #{obj.createTime}, #{obj.updateTime}
        )
        </foreach>
    </insert>

    <update id="update">
        update api_test_case
        <set>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="caseName != null">
                case_name = #{caseName},
            </if>
            <if test="caseDesc != null">
                case_desc = #{caseDesc},
            </if>
            <if test="module != null">
                module = #{module},
            </if>
            <if test="author != null">
                author = #{author},
            </if>
            <if test="script != null">
                script = #{script},
            </if>
            <if test="isAvailable != null">
                is_available = #{isAvailable},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateAll">
        update api_test_case
        <set>
            project_id = #{projectId},
            case_name = #{caseName},
            case_desc = #{caseDesc},
            module = #{module},
            author = #{author},
            script = #{script},
            is_available = #{isAvailable},
            is_deleted = #{isDeleted},
            create_time = #{createTime},
            update_time = #{updateTime},
        </set>
        where id = #{id}
    </update>

    <update id="deleteById">
        update api_test_case set is_deleted = 1 where id = #{value}
    </update>

    <select id="queryById" resultType="cn.veasion.auto.model.ApiTestCasePO">
        select * from api_test_case where id = #{value}
    </select>

    <select id="queryList" resultType="cn.veasion.auto.model.ApiTestCasePO">
        select * from api_test_case where is_deleted = 0
        <include refid="whereSQL" />
    </select>

    <sql id="whereSQL">
        <where>
            <if test="id != null">
                and t.id = #{id}
            </if>
            <if test="projectId != null">
                and t.project_id = #{projectId}
            </if>
            <if test="caseName != null and caseName.trim() != ''">
                and t.case_name like concat('%', #{caseName}, '%')
            </if>
            <if test="module != null and module.trim() != ''">
                and t.module like concat('%', #{module}, '%')
            </if>
            <if test="author != null and author.trim() != ''">
                and t.author like concat('%', #{author}, '%')
            </if>
            <if test="isAvailable != null">
                and t.is_available = #{isAvailable}
            </if>
            <if test="createTime != null">
                and t.create_time >= #{createTime}
            </if>
        </where>
    </sql>

</mapper>
