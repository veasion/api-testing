<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC " -//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.veasion.auto.mapper.ApiLogMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into api_log
        (
            id, ref_id, project_id, execute_strategy_id, test_case_id, api_request_id,
            url, msg, status, `time`, exec_time, is_deleted, create_time, update_time
        )
        values
        (
            #{id}, #{refId}, #{projectId}, #{executeStrategyId}, #{testCaseId}, #{apiRequestId},
            #{url}, #{msg}, #{status}, #{time}, #{execTime}, #{isDeleted}, #{createTime}, #{updateTime}
        )
    </insert>

    <insert id="insertAll">
        insert into api_log
        (
            id, ref_id, project_id, execute_strategy_id, test_case_id, api_request_id,
            url, msg, status, `time`, exec_time, is_deleted, create_time, update_time
        )
        values
        <foreach collection="list" item="obj" separator=",">
        (
            #{obj.id}, #{obj.refId}, #{obj.projectId}, #{obj.executeStrategyId}, #{obj.testCaseId}, #{obj.apiRequestId},
            #{obj.url}, #{obj.msg}, #{obj.status}, #{obj.time}, #{obj.execTime}, #{obj.isDeleted}, #{obj.createTime}, #{obj.updateTime}
        )
        </foreach>
    </insert>

    <update id="update">
        update api_log
        <set>
            <if test="refId != null">
                ref_id = #{refId},
            </if>
            <if test="projectId != null">
                project_id = #{projectId},
            </if>
            <if test="executeStrategyId != null">
                execute_strategy_id = #{executeStrategyId},
            </if>
            <if test="testCaseId != null">
                test_case_id = #{testCaseId},
            </if>
            <if test="apiRequestId != null">
                api_request_id = #{apiRequestId},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="msg != null">
                msg = #{msg},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="time != null">
                `time` = #{time},
            </if>
            <if test="execTime != null">
                exec_time = #{execTime},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="updateAll">
        update api_log
        <set>
            ref_id = #{refId},
            project_id = #{projectId},
            execute_strategy_id = #{executeStrategyId},
            test_case_id = #{testCaseId},
            api_request_id = #{apiRequestId},
            url = #{url},
            msg = #{msg},
            status = #{status},
            `time` = #{time},
            exec_time = #{execTime},
            is_deleted = #{isDeleted},
            create_time = #{createTime},
            update_time = #{updateTime},
        </set>
        where id = #{id}
    </update>

    <delete id="deleteLogs">
        delete from api_log where create_time &lt;= #{value}
    </delete>

    <select id="queryById" resultType="cn.veasion.auto.model.ApiLogPO">
        select * from api_log t where id = #{value}
    </select>

    <select id="queryList" resultType="cn.veasion.auto.model.ApiLogVO">
        select * from api_log t where t.is_deleted = 0
        <include refid="whereSQL" />
        order by t.create_time desc
    </select>

    <select id="queryByStrategyId" resultType="cn.veasion.auto.model.ApiLogPO">
        select * from api_log where is_deleted = 0 and ref_id = '0'
        and execute_strategy_id = #{strategyId}
        <if test="logId != null and logId.trim() != ''">
            and id = #{logId}
        </if>
        order by create_time desc
    </select>

    <select id="countStatus" resultType="hashmap">
        select status, count(1) as count from api_log t
        where is_deleted = 0 and ref_id &lt;&gt; '0'
        <include refid="whereSQL" />
        group by status
    </select>

    <select id="groupDayStatusCount" resultType="hashmap">
        select
        DATE_FORMAT(create_time, '%Y-%m-%d') as date,
        COUNT(IF(status = 1, 1, NULL)) as 'status1',
        COUNT(IF(status = 2, 1, NULL)) as 'status2',
        COUNT(IF(status = 3, 1, NULL)) as 'status3'
        from api_log t
        where is_deleted = 0 and ref_id &lt;&gt; '0'
        <include refid="whereSQL" />
        group by DATE_FORMAT(create_time, '%Y-%m-%d')
    </select>

    <select id="listRanking" resultType="cn.veasion.auto.model.ApiLogVO">
        select t.*, p.name as projectName, s.name as executeStrategyName, api.api_name, api.api_desc, api.method
        from api_log t
        inner join project p on t.project_id = p.id and p.is_deleted = 0
        inner join api_execute_strategy s on t.execute_strategy_id = s.id and s.strategy = 1 and s.is_deleted = 0
        left join api_request api on api.id = t.api_request_id and api.is_deleted = 0
        where t.is_deleted = 0 and t.ref_id &lt;&gt; '0' and t.time > 0
        <include refid="whereSQL" />
        group by t.execute_strategy_id, t.url
        order by t.time desc limit 20
    </select>

    <select id="sumTimeByRefId" resultType="cn.veasion.auto.model.ApiLogPO">
        select SUM(`time`) as time, MAX(status) as status from api_log t where ref_id = #{refId} and is_deleted = 0
    </select>

    <sql id="whereSQL">
        <if test="id != null and id.trim() != ''">
            and t.id = #{id}
        </if>
        <if test="refId != null and refId.trim() != ''">
            and t.ref_id = #{refId}
        </if>
        <if test="projectId != null">
            and t.project_id = #{projectId}
        </if>
        <if test="executeStrategyId != null">
            and t.execute_strategy_id = #{executeStrategyId}
        </if>
        <if test="testCaseId != null">
            and t.test_case_id = #{testCaseId}
        </if>
        <if test="apiRequestId != null">
            and t.api_request_id = #{apiRequestId}
        </if>
        <if test="url != null and url.trim() != ''">
            and t.url like concat('%', #{url}, '%')
        </if>
        <if test="msg != null and msg.trim() != ''">
            and t.msg like concat('%', #{msg}, '%')
        </if>
        <if test="status != null">
            and t.status = #{status}
        </if>
        <if test="statusList != null">
            and t.status in
            <foreach collection="statusList" item="item" open="(" separator="," close=")">#{item}</foreach>
        </if>
        <if test="startTime != null">
            and t.time >= #{time}
        </if>
        <if test="endTime != null">
            and t.time &lt;= #{endTime}
        </if>
        <if test="startExecTime != null">
            and t.exec_time >= #{startExecTime}
        </if>
        <if test="endExecTime != null">
            and t.exec_time &lt;= #{endExecTime}
        </if>
        <if test="startCreateDate != null">
            and t.create_time >= #{startCreateDate}
        </if>
        <if test="endCreateTime != null">
            and t.create_time &lt;= #{endCreateTime}
        </if>
    </sql>

</mapper>
